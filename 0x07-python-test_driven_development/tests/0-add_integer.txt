=========================
Generating Test Cases for ``0-add_integer`` module.
Defines a function that returns the sum of its two arguments
=========================

>>> print(add_integer(1, 2))
3
>>> print(add_integer(1.8, 5))
6
>>> print(add_integer(0.8, 8.8))
8
>>> print(add_integer(-3, 7))
4
>>> print(add_integer(-2, -8))
-10
>>> print(add_integer(0, -5.89))
-5
>>> print(add_integer(1.78, -0.78))
1
>>> print(add_integer(3))
101
>>> print(add_integer(0))
98
>>> print(add_integer(3, "Abcd Efgh"))
Traceback (most recent call last):
...
TypeError: b must be an integer
>>> print(add_integer("A", 77))
Traceback (most recent call last):
...
TypeError: a must be an integer
>>> print(add_integer([1, 2]))
Traceback (most recent call last):
...
TypeError: a must be an integer
>>> print(add_integer(None, None))
Traceback (most recent call last):
...
TypeError: a must be an integer
>>> print(add_integer(546, None))
Traceback (most recent call last):
...
TypeError: b must be an integer
>>> print(add_integer(-5, float('inf')))
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer

>>> print(add_integer(float('nan')))
Traceback (most recent call last):
...
ValueError: cannot convert float NaN to integer
Footer